name: $(Date:yyyMMdd)$(Rev:.r)
trigger:
  batch: false # batch changes if true (the default); start a new build for every push if false
  branches:
    include: [ main ] # branch names which will trigger a build
variables:
  servicePrincipal: http://AbelDeployPrincipal
  servicePrincipalTenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
  azureSubscriptionName: ca-abewan-demo-test
  resourceGroupName: abellearndbrg4
  location: southcentralus
  startip: 0.0.0.0
  endip: 0.0.0.0
  dbName: learndb
  dbEdition: GeneralPurpose
  dbFamily: Gen4
  dbCapacity: 1
  dbZoneRedundant: false
  webAppSku: S1
  partnerServerLocation: westus2
  node2Location: westus
  storageAccountSku: Standard_LRS
  buildPlatform: "Any CPU"
  buildConfiguration: Release
  
stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: 'Source/Tailwind.Traders.Web.sln'
    # - task: VSBuild@1
    #   inputs:
    #     solution: 'Source/Tailwind.Traders.Web.sln'
    #     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    #     platform: '$(buildPlatform)'
    #     configuration: '$(buildConfiguration)'
    # - task: VSTest@2
    #   inputs:
    #     platform: '$(buildPlatform)'
    #     configuration: '$(buildConfiguration)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'Deploy'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: DeployWebFrontEndDev
  displayName: Deploy App Service - Dev
  dependsOn: Build
  jobs:
  - deployment: DeployWebFrontEnd
    displayName: Deploy web to App Service
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-web-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Deploy web to App Service'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "App Service deploy..."
                Start-Sleep -s 32
                Write-Host "Done deploying app service deploy."            

- stage: DeployBackEndDev
  displayName: Deploy K8s - Dev
  dependsOn: Build
  jobs:
  - deployment: DeployBackEndCode
    displayName: Deploy backend to K8s
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-api-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Azure CLI: Preserve Cluster Tags'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Preserving cluster tags..."
                Start-Sleep -s 1
                Write-Host "Done preserving cluster tags."         
          - task: PowerShell@2
            displayName : 'Azure Deployment: Create AKS Cluster'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Creating AKS cluster..."
                Start-Sleep -s 23
                Write-Host "Done creating AKS cluster."            
          - task: PowerShell@2
            displayName : 'Extract Resource Information'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Extract Resource Information..."
                Start-Sleep -s 1
                Write-Host "Done extracting resource information."  
          - task: PowerShell@2
            displayName : 'kubectl setup tiller environment'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Setting up tiller..."
                Start-Sleep -s 7
                Write-Host "Done setting up tiller."                  
          - task: PowerShell@2
            displayName : 'Install Helm'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Installing helm..."
                Start-Sleep -s 2
                Write-Host "Done installing helm."                  
          - task: PowerShell@2
            displayName : 'Helm init'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Helm init..."
                Start-Sleep -s 8
                Write-Host "Done installing helm."                  
          - task: PowerShell@2
            displayName : 'Helm upgrade'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Helm upgrade..."
                Start-Sleep -s 68
                Write-Host "Done helm upgrade."                  

- stage: DeployDBDev
  displayName: Az SQL schema changes - Dev
  dependsOn: Build
  jobs:
  - deployment: DeployDBSchema
    displayName: Deploy db schema
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-db-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Dacpac deploy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Deploying db schema..."
                Write-Host "Dacpac deploy..."
                Start-Sleep -s 61
                Write-Host "Done with Dacpac deploy."
                Write-Host "Done deploying db schema."         

- stage: SeleniumWebTestsDev
  displayName: Selenium Web Tests - Dev
  dependsOn: [DeployWebFrontEndDev, DeployBackEndDev, DeployDBDev]
  jobs:
  - deployment: SeleniumWebTestsDev
    displayName: Selenium Web Tests 
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-db-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Dacpac deploy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Running selenium web ui tests..."
                Start-Sleep -s 67
                Write-Host "Done running selenium tests."


- stage: DeployWebFrontEndBeta
  displayName: Deploy App Service - Beta
  dependsOn: SeleniumWebTestsDev
  jobs:
  - deployment: DeployWebFrontEnd
    displayName: Deploy web to App Service
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-web-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Deploy web to App Service'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "App Service deploy..."
                Start-Sleep -s 32
                Write-Host "Done deploying app service deploy."            


- stage: DeployBackEndBeta
  displayName: Deploy K8s - Beta
  dependsOn: SeleniumWebTestsDev
  jobs:
  - deployment: DeployBackEndCode
    displayName: Deploy backend to K8s
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-api-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Azure CLI: Preserve Cluster Tags'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Preserving cluster tags..."
                Start-Sleep -s 1
                Write-Host "Done preserving cluster tags."         
          - task: PowerShell@2
            displayName : 'Azure Deployment: Create AKS Cluster'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Creating AKS cluster..."
                Start-Sleep -s 23
                Write-Host "Done creating AKS cluster."            
          - task: PowerShell@2
            displayName : 'Extract Resource Information'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Extract Resource Information..."
                Start-Sleep -s 1
                Write-Host "Done extracting resource information."  
          - task: PowerShell@2
            displayName : 'kubectl setup tiller environment'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Setting up tiller..."
                Start-Sleep -s 7
                Write-Host "Done setting up tiller."                  
          - task: PowerShell@2
            displayName : 'Install Helm'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Installing helm..."
                Start-Sleep -s 2
                Write-Host "Done installing helm."                  
          - task: PowerShell@2
            displayName : 'Helm init'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Helm init..."
                Start-Sleep -s 8
                Write-Host "Done installing helm."                  
          - task: PowerShell@2
            displayName : 'Helm upgrade'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Helm upgrade..."
                Start-Sleep -s 62
                Write-Host "Done helm upgrade."                  


- stage: DeployDBBeta
  displayName: Az SQL schema changes - Beta
  dependsOn: SeleniumWebTestsDev
  jobs:
  - deployment: DeployDBSchema
    displayName: Deploy db schema
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-db-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Dacpac deploy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Deploying db schema..."
                Write-Host "Dacpac deploy..."
                Start-Sleep -s 63
                Write-Host "Done with Dacpac deploy."
                Write-Host "Done deploying db schema."         

- stage: SeleniumWebTestsBeta
  displayName: Selenium Web Tests - Beta
  dependsOn: [DeployWebFrontEndBeta, DeployBackEndBeta, DeployDBBeta]
  jobs:
  - deployment: SeleniumWebTestsBeta
    displayName: Selenium Web Tests 
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-selenium-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Dacpac deploy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Running selenium web ui tests..."
                Start-Sleep -s 67
                Write-Host "Done running selenium tests."


- stage: DeployWebFrontEndProd
  displayName: Deploy App Service - Prod
  dependsOn: SeleniumWebTestsBeta
  jobs:
  - deployment: DeployWebFrontEnd
    displayName: Deploy web to App Service
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-web-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Deploy web to App Service'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "App Service deploy..."
                Start-Sleep -s 38
                Write-Host "Done deploying app service deploy."            



- stage: DeployBackEndProd
  displayName: Deploy K8s - Prod
  dependsOn: SeleniumWebTestsBeta
  jobs:
  - deployment: DeployBackEndCode
    displayName: Deploy backend to K8s
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-api-prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Azure CLI: Preserve Cluster Tags'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Preserving cluster tags..."
                Start-Sleep -s 1
                Write-Host "Done preserving cluster tags."         
          - task: PowerShell@2
            displayName : 'Azure Deployment: Create AKS Cluster'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Creating AKS cluster..."
                Start-Sleep -s 23
                Write-Host "Done creating AKS cluster."            
          - task: PowerShell@2
            displayName : 'Extract Resource Information'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Extract Resource Information..."
                Start-Sleep -s 1
                Write-Host "Done extracting resource information."  
          - task: PowerShell@2
            displayName : 'kubectl setup tiller environment'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Setting up tiller..."
                Start-Sleep -s 7
                Write-Host "Done setting up tiller."                  
          - task: PowerShell@2
            displayName : 'Install Helm'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Installing helm..."
                Start-Sleep -s 2
                Write-Host "Done installing helm."                  
          - task: PowerShell@2
            displayName : 'Helm init'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Helm init..."
                Start-Sleep -s 8
                Write-Host "Done installing helm."                  
          - task: PowerShell@2
            displayName : 'Helm upgrade'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Helm upgrade..."
                Start-Sleep -s 67
                Write-Host "Done helm upgrade."                  

- stage: DeployDBProd
  displayName: Az SQL schema changes - Prod
  dependsOn: SeleniumWebTestsBeta
  jobs:
  - deployment: DeployDBSchema
    displayName: Deploy db schema
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-db-beta'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Dacpac deploy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Deploying db schema..."
                Write-Host "Dacpac deploy..."
                Start-Sleep -s 58
                Write-Host "Done with Dacpac deploy."
                Write-Host "Done deploying db schema."    


- stage: SeleniumWebTestsProd
  displayName: Selenium Web Tests - Prod
  dependsOn: [DeployWebFrontEndProd, DeployBackEndProd, DeployDBProd]
  jobs:
  - deployment: SeleniumWebTestsProd
    displayName: Selenium Web Tests 
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      adminlogin: abel
      servername: abellearndbserverdev1
      webAppName: abellearndbwebappdev1
      failoverName: learndbserverfailoverdev1
      partnerServerName: learndbserver2dev1
      trafficManagerProfileName: abellearndbtmdev1
      uniqueDNSName: abellearndbuniquedev1
      storageAccountName: abellearndbstoragedev1
    environment: 'forester-selenium-prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'
          - task: PowerShell@2
            displayName : 'Dacpac deploy'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Running selenium web ui tests..."
                Start-Sleep -s 68
                Write-Host "Done running selenium tests."

